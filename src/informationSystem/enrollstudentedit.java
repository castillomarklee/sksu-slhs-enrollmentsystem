/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class enrollstudentedit extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        String sectionid;
        String enrollid;
        String gradedummy;
        String sectionname;
   public enrollstudentedit() {
        initComponents();
        mycon.doConnect();
        student();
        yearlevelsearch();
       

        
    }
   
   void yearlevelsearch(){
       try {
           conn = mycon.con;
           stmt = conn.createStatement();
           rs = stmt.executeQuery("select * from yearlevel");
           
           while(rs.next()){
               cbyearlevelsearch.addItem(rs.getString(2));
           }
       } catch (Exception e) {
           JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
       }
   }
   
   void student(){
       try {
           conn = mycon.con;
           stmt = conn.createStatement();
           rs = stmt.executeQuery("SELECT \n" +
"  enrolladdsubject.enrollstudentid, \n" +
"  student.accountnumber, \n" +
"  student.studfirst, \n" +
"  student.studmiddle, \n" +
"  student.studlast, \n" +
"  enrolladdsubject.sectionid, \n" +
"  section.sectionname\n" +
"FROM \n" +
"  public.enrolladdsubject, \n" +
"  public.student, \n" +
"  public.section\n" +
"WHERE \n" +
"  enrolladdsubject.accountnumber = student.accountnumber AND\n" +
"  enrolladdsubject.sectionid = section.sectionid;");
           DefaultTableModel model = ((DefaultTableModel)tblstudent.getModel());
           model.getDataVector().removeAllElements();
           
           while(rs.next()){
               model.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(7)});
           }
       } catch (Exception e) {
       }
   }
   

   
   void senior(){
       try {
           conn = mycon.con;
           stmt = conn.createStatement();
           String seniorenroll = "SENIOR";
           rs = stmt.executeQuery("select * from section");
       } catch (Exception e) {
       }
       
   }
   

   
 
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblstudlast = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblstudid = new javax.swing.JLabel();
        lblstudfirst = new javax.swing.JLabel();
        lblstudmiddle = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtenrollid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblstudent = new javax.swing.JTable();
        btnshowdata = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        lblsectionname = new javax.swing.JLabel();
        cbyearlevelsearch = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setLayout(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 580, 80);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton3.setText("Update");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton5.setText("Delete");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton2.setText("Back");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 80, 580, 80);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel1.setText("Section:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 380, 110, 30);

        lblstudlast.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblstudlast);
        lblstudlast.setBounds(200, 350, 290, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Firstname:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(50, 290, 110, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel5.setText("Middlename:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 320, 120, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel6.setText("Search:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 470, 70, 30);

        lblstudid.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblstudid);
        lblstudid.setBounds(200, 260, 290, 30);

        lblstudfirst.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblstudfirst);
        lblstudfirst.setBounds(200, 290, 280, 30);

        lblstudmiddle.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblstudmiddle);
        lblstudmiddle.setBounds(200, 320, 290, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel7.setText("Student ID:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(50, 260, 110, 30);
        jPanel1.add(txtenrollid);
        txtenrollid.setBounds(110, 200, 370, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Enroll ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 200, 90, 30);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(110, 200, 370, 30);

        tblstudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Enroll ID", "Firstname", "Middlename", "Lastname", "Section"
            }
        ));
        tblstudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblstudentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblstudent);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 550, 580, 160);

        btnshowdata.setText("Clear");
        btnshowdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowdataActionPerformed(evt);
            }
        });
        jPanel1.add(btnshowdata);
        btnshowdata.setBounds(480, 430, 90, 30);

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(370, 430, 90, 30);

        lblsectionname.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblsectionname);
        lblsectionname.setBounds(200, 380, 350, 30);

        jPanel1.add(cbyearlevelsearch);
        cbyearlevelsearch.setBounds(100, 430, 260, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel8.setText("Lastname:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(50, 350, 110, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel10.setText("Yearlevel:");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 430, 140, 30);
        jPanel1.add(txtsearch);
        txtsearch.setBounds(90, 470, 270, 30);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(163, 510, 120, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnshowdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowdataActionPerformed
        student();
        txtenrollid.setText(null);
        lblstudid.setText(null);
        lblstudfirst.setText(null);
        lblstudmiddle.setText(null);
        lblstudlast.setText(null);
    }//GEN-LAST:event_btnshowdataActionPerformed

    private void tblstudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblstudentMouseClicked
        try {
            int studentrow = tblstudent.getSelectedRow();
            String selectrow1 = (tblstudent.getModel().getValueAt(studentrow, 0).toString());
            String selectrow2 = (tblstudent.getModel().getValueAt(studentrow, 1).toString());
            String selectrow3 = (tblstudent.getModel().getValueAt(studentrow, 2).toString());
            String selectrow4 = (tblstudent.getModel().getValueAt(studentrow, 3).toString());
            
            String tablequery = "SELECT \n" +
"  enrolladdsubject.enrollstudentid, \n" +
"  student.accountnumber, \n" +
"  student.studfirst, \n" +
"  student.studmiddle, \n" +
"  student.studlast, \n" +
"  enrolladdsubject.sectionid, \n" +
"  section.sectionname\n" +
"FROM \n" +
"  public.enrolladdsubject, \n" +
"  public.student, \n" +
"  public.section\n" +
"WHERE \n" +
"  enrolladdsubject.accountnumber = student.accountnumber AND\n" +
"  enrolladdsubject.sectionid = section.sectionid and enrolladdsubject.enrollstudentid='" + selectrow1 + "'";
            pstmt = conn.prepareStatement(tablequery);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                lblstudid.setText(rs.getString(2));
                lblstudfirst.setText(rs.getString(3));
                lblstudmiddle.setText(rs.getString(4));
                lblstudlast.setText(rs.getString(5));
                txtenrollid.setText(rs.getString(1));
                sectionid = rs.getString(6);
                lblsectionname.setText(rs.getString(7));
                enrollid = rs.getString(1);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblstudentMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  enrolladdsubject.enrollstudentid, \n" +
"  student.accountnumber, \n" +
"  student.studfirst, \n" +
"  student.studmiddle, \n" +
"  student.studlast, \n" +
"  section.sectionid, \n" +
"  section.sectionname, \n" +
"  yearlevel.yearlevelid, \n" +
"  yearlevel.yearlevelname\n" +
"FROM \n" +
"  public.enrolladdsubject, \n" +
"  public.student, \n" +
"  public.section, \n" +
"  public.yearlevel\n" +
"WHERE \n" +
"  enrolladdsubject.accountnumber = student.accountnumber AND\n" +
"  enrolladdsubject.sectionid = section.sectionid AND\n" +
"  section.yearlevelid = yearlevel.yearlevelid where yearlevel.yearlevelname='" + cbyearlevelsearch.getSelectedItem().toString() + "'");
           DefaultTableModel model = ((DefaultTableModel)tblstudent.getModel());
           model.getDataVector().removeAllElements();
           
           while(rs.next()){
               model.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(7)});
           }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int deleteask = JOptionPane.showConfirmDialog(this, "Do you want to delete this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(deleteask == JOptionPane.YES_OPTION){
            PreparedStatement graderecord;
            PreparedStatement graderecordstatement;
            Statement gradestatement;
            ResultSet graderesult;
            PreparedStatement gradefiles;
            PreparedStatement enrollrecord;
            PreparedStatement enrollstudent;
            PreparedStatement enrollstudentrecord;
            PreparedStatement enrollstudentinformation;
            try {
                conn = mycon.con;
                String querydelete = "delete from enrolladdsubject where enrollstudentid=?";
                pstmt = conn.prepareStatement(querydelete);
                pstmt.setString(1, txtenrollid.getText().toUpperCase());
                
                String queryenrollstudentinformation = "delete from enrollstudentrecord where enrollstudentid=?";
                enrollstudentinformation = conn.prepareStatement(queryenrollstudentinformation);
                enrollstudentinformation.setString(1, txtenrollid.getText().toUpperCase());
                
                String enrollstudentquery = "delete from ernollstudent where enrollstudentid=?";
                enrollstudent = conn.prepareStatement(enrollstudentquery);
                enrollstudent.setString(1, txtenrollid.getText().toUpperCase());
                
                
                String querygraderecorddelete = "delete from recordgrade where enrollstudentid=?";
                graderecord = conn.prepareStatement(querygraderecorddelete);
                graderecord.setString(1, txtenrollid.getText().toUpperCase());
                
                String queryrecordfiles = "delete from grade where enrollstudentid=?";
                gradefiles = conn.prepareStatement(queryrecordfiles);
                gradefiles.setString(1, txtenrollid.getText().toUpperCase());
                
                String query = "delete from ernollstudent where enrollstudentid=?";
                enrollstudentrecord = conn.prepareStatement(query);
                enrollstudentrecord.setString(1, txtenrollid.getText());
                
                
               
                String record = "insert into registertable select * from student where accountnumber=?";
                graderecordstatement = conn.prepareStatement(record);
                graderecordstatement.setString(1, lblstudid.getText());
                
                 String queryenrollrecord = "delete from student where accountnumber=?";
                 enrollrecord = conn.prepareStatement(queryenrollrecord);
                 enrollrecord.setString(1, lblstudid.getText());
                
                pstmt.execute();
                graderecordstatement.execute();
                enrollstudentinformation.execute();
                enrollstudentrecord.execute();
                enrollstudent.execute();
                graderecord.execute();
                gradefiles.execute();
                enrollrecord.execute();
                
                
                JOptionPane.showMessageDialog(this, "Student has been Unenrolled");
                txtenrollid.setText(null);
                lblstudid.setText(null);
                lblstudfirst.setText(null);
                lblstudmiddle.setText(null);
                lblstudlast.setText(null);
                cbyearlevelsearch.setSelectedIndex(0);
                lblsectionname.setText(null);
                student();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int askupdate = JOptionPane.showConfirmDialog(this, "Do you want to update this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askupdate == JOptionPane.YES_OPTION){
            PreparedStatement ernollstudent;
            PreparedStatement enrollstudentrecord;
            PreparedStatement grade;
            PreparedStatement recordgrade;
            
            try {
                conn = mycon.con;
                String queryupdate = "update enrolladdsubject set enrollstudentid=?, accountnumber=?, sectionid=? where enrollstudentid=?";
                
               
                pstmt = conn.prepareStatement(queryupdate);
                pstmt.setString(1, txtenrollid.getText().toUpperCase());
                pstmt.setString(2, lblstudid.getText().toUpperCase());
                pstmt.setString(3, sectionid);
                pstmt.setString(4, enrollid);
                pstmt.execute();
                
                String ernollstudentquery = "update ernollstudent set enrollstudentid=?, accountnumber=?, sectionid=? where enrollstudentid=?";
                ernollstudent = conn.prepareStatement(ernollstudentquery);
                ernollstudent.setString(1, txtenrollid.getText().toUpperCase());
                ernollstudent.setString(2, lblstudid.getText().toUpperCase());
                ernollstudent.setString(3, sectionid);
                ernollstudent.setString(4, enrollid);
                ernollstudent.execute();
                
                String enrollstudentrecordquery = "update enrollstudentrecord set enrollstudentid=?, accountnumber=?, sectionid=? where enrollstudentid=?";
                enrollstudentrecord = conn.prepareStatement(enrollstudentrecordquery);
                enrollstudentrecord.setString(1, txtenrollid.getText().toUpperCase());
                enrollstudentrecord.setString(2, lblstudid.getText().toUpperCase());
                enrollstudentrecord.setString(3, sectionid);
                enrollstudentrecord.setString(4, enrollid);
                enrollstudentrecord.execute();
                
                String querygrade = "update grade set enrollstudentid=? where enrollstudentid=?";
                grade = conn.prepareStatement(querygrade);
                grade.setString(1, txtenrollid.getText().toUpperCase());
                grade.setString(2, enrollid);
                grade.execute();
                
                String queryrecordgrade = "update recordgrade set enrollstudentid=? where enrollstudentid=?";
                recordgrade = conn.prepareStatement(queryrecordgrade);
                recordgrade.setString(1, txtenrollid.getText().toUpperCase());
                recordgrade.setString(2, enrollid);
                recordgrade.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been updated");
                txtenrollid.setText(null);
                lblstudid.setText(null);
                lblstudfirst.setText(null);
                lblstudmiddle.setText(null);
                lblstudlast.setText(null);
                cbyearlevelsearch.setSelectedIndex(0);
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        studentform studentrecord = new studentform();
        studentrecord.close();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(txtsearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please input the name of the student you want to search");
        }else{
            try {
                conn = mycon.con;
           stmt = conn.createStatement();
           rs = stmt.executeQuery("SELECT \n" +
"  enrolladdsubject.enrollstudentid, \n" +
"  student.accountnumber, \n" +
"  student.studfirst, \n" +
"  student.studmiddle, \n" +
"  student.studlast, \n" +
"  enrolladdsubject.sectionid, \n" +
"  section.sectionname\n" +
"FROM \n" +
"  public.enrolladdsubject, \n" +
"  public.student, \n" +
"  public.section\n" +
"WHERE \n" +
"  enrolladdsubject.accountnumber = student.accountnumber AND\n" +
"  enrolladdsubject.sectionid = section.sectionid and student.studfirst like'" + txtsearch.getText().toUpperCase() + "%' or student.studmiddle like'" + txtsearch.getText().toUpperCase() + "%' or student.studlast like'" + txtsearch.getText().toUpperCase() + "'");
           DefaultTableModel model = ((DefaultTableModel)tblstudent.getModel());
           model.getDataVector().removeAllElements();
           
           while(rs.next()){
               model.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(7)});
           }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnshowdata;
    private javax.swing.JComboBox<String> cbyearlevelsearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblsectionname;
    private javax.swing.JLabel lblstudfirst;
    private javax.swing.JLabel lblstudid;
    private javax.swing.JLabel lblstudlast;
    private javax.swing.JLabel lblstudmiddle;
    private javax.swing.JTable tblstudent;
    private javax.swing.JTextField txtenrollid;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
