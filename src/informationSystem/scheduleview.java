/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class scheduleview extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        
    public scheduleview() {
        initComponents();
        mycon.doConnect();
        scheudletable();
        yearlevel();
    }
    
    void scheudletable(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  schedule.subjectday, \n" +
"  schedule.subjectschedule, \n" +
"  subject.subjecttitle, \n" +
"  teachertable.teacher_first\n" +
"FROM \n" +
"  public.schedule, \n" +
"  public.subject, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  schedule.subjectid = subject.subjectid AND\n" +
"  subject.teacherid = teachertable.teacher_id;");
            DefaultTableModel model = ((DefaultTableModel)tblschedule.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
            
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
    void yearlevel(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from yearlevel");
            
            while(rs.next()){
                cbyearlevel.addItem(rs.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblschedule = new javax.swing.JTable();
        cbyearlevel = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setLayout(null);

        tblschedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Day", "Time", "Subject", "Teacher"
            }
        ));
        jScrollPane1.setViewportView(tblschedule);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 170, 540, 190);

        jPanel1.add(cbyearlevel);
        cbyearlevel.setBounds(50, 60, 450, 30);

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(220, 110, 100, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SSELECT \n" +
"  schedule.subjectday, \n" +
"  schedule.subjectschedule, \n" +
"  subject.subjecttitle, \n" +
"  teachertable.teacher_first\n" +
"FROM \n" +
"  public.schedule, \n" +
"  public.subject, \n" +
"  public.teachertable, \n" +
"  public.yearlevel\n" +
"WHERE \n" +
"  schedule.subjectid = subject.subjectid AND\n" +
"  subject.teacherid = teachertable.teacher_id AND\n" +
"  subject.yearlevelid = yearlevel.yearlevelid and yearlevel.yearlevelname='" + cbyearlevel.getSelectedItem().toString() + "'");
            DefaultTableModel model = ((DefaultTableModel)tblschedule.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
            
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbyearlevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblschedule;
    // End of variables declaration//GEN-END:variables
}
