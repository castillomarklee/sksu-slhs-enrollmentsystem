/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class studentsection extends javax.swing.JFrame {
    DBconnetion mycon = new DBconnetion();
    Connection conn;
    PreparedStatement pstmt;
    Statement stmt;
    ResultSet rs;
    String teacheridresult;
    String sectionid;
    String yearlevelid;
    String enrollid;
    public studentsection() {
        initComponents();
        mycon.doConnect();
        studentcategory();
        loadteacher();
        center();
        sectiontable();
    }
    
    void sectiontable(){
        try {
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  section.sectionid, \n" +
"  section.sectionname, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_first, \n" +
"  category.categoryname\n" +
"FROM \n" +
"  public.category, \n" +
"  public.yearlevel, \n" +
"  public.section, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  category.categoryid = yearlevel.categoryid AND\n" +
"  section.yearlevelid = yearlevel.yearlevelid AND\n" +
"  section.teacherid = teachertable.teacher_id;");
            DefaultTableModel model = ((DefaultTableModel)tblsection.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            }
        } catch (Exception e) {
        }
        
        
    }
    
         void center(){

    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize() ;
    Dimension jscreen = this.getSize();

    this.setLocation((screen.width - jscreen.width)/2, ((screen.height-jscreen.height)/2)-90);

    } 
    
    void loadteacher(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from teachertable");
            DefaultTableModel teachermodel = ((DefaultTableModel)tblteacher.getModel());
            teachermodel.getDataVector().removeAllElements();
            while(rs.next()){
               teachermodel.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(4)});
               
                   
               
            }
        } catch (Exception e) {
        }
    }
    
            public void close(){
    WindowEvent winclose = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclose);
}
            
            void studentcategory(){
                try {
                    conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from yearlevel");
                
                while(rs.next()){
                    cbyearlevel.addItem(rs.getString(2));
                }
                } catch (Exception e) {
                }
            }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblyearlevelid = new javax.swing.JLabel();
        lblsectionid = new javax.swing.JLabel();
        lblteacherid = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblteacher = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtsectionid = new javax.swing.JTextField();
        txtsectcionname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbyearlevel = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtteacher = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsection = new javax.swing.JTable();
        btnsearchteacher = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblid = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jInternalFrame1.setVisible(true);

        jPanel1.setLayout(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 550, 100);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setFocusCycleRoot(true);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Save-icon.png"))); // NOI18N
        jButton4.setText("Save");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton1.setText("Delete");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton3.setText("Update");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/view icon.png"))); // NOI18N
        jButton6.setText("Show all data");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/clear all icon.png"))); // NOI18N
        jButton7.setText("Delete all data");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Close-icon.png"))); // NOI18N
        jButton5.setText("Back");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 100, 550, 70);

        tblteacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Teacher ID", "Firstname", "Lastname"
            }
        ));
        tblteacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblteacherMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblteacher);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel1.setText("Section ID");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("Section Name");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Search");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Yearlevel");

        cbyearlevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbyearlevelActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel5.setText("Teacher");

        txtteacher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtteacherKeyReleased(evt);
            }
        });

        tblsection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Section ID", "Section name", "Yearlevel name", "Adviser", "Category name"
            }
        ));
        tblsection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsectionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblsection);

        btnsearchteacher.setText("Search");
        btnsearchteacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchteacherActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel6.setText("ID");

        lblid.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel7.setText("Name");

        lblname.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtsearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(9, 9, 9))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(14, 14, 14)
                                .addComponent(txtteacher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsearchteacher, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtsectionid, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                                    .addComponent(txtsectcionname)
                                    .addComponent(cbyearlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblid, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtsectionid)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsectcionname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbyearlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnsearchteacher)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtteacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 170, 550, 450);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblyearlevelid)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                    .addContainerGap(285, Short.MAX_VALUE)
                    .addComponent(lblteacherid)
                    .addGap(266, 266, 266)))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(259, 259, 259)
                    .addComponent(lblsectionid)
                    .addContainerGap(260, Short.MAX_VALUE)))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(0, 309, Short.MAX_VALUE)
                    .addComponent(lblyearlevelid)
                    .addGap(0, 310, Short.MAX_VALUE)))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                    .addContainerGap(342, Short.MAX_VALUE)
                    .addComponent(lblteacherid)
                    .addGap(277, 277, 277)))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(281, 281, 281)
                    .addComponent(lblsectionid)
                    .addContainerGap(338, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        studentform student = new studentform();
        student.setVisible(true);
        close();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnsearchteacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchteacherActionPerformed
         try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from teachertable where teacher_first like'" + txtteacher.getText().toUpperCase() + "%' or teacher_last like'" + txtteacher.getText().toUpperCase() + "%'");
                DefaultTableModel teachermodel = ((DefaultTableModel)tblteacher.getModel());
                teachermodel.getDataVector().removeAllElements();
                
                while(rs.next()){
                    teachermodel.addRow(new Object[]{rs.getString(2), rs.getString(4)});
                    lblteacherid.setText(rs.getString(1));
                    lblid.setText(rs.getString(1));
                    lblname.setText(rs.getString(2));
                    teacheridresult = rs.getString(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
    }//GEN-LAST:event_btnsearchteacherActionPerformed

    private void cbyearlevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbyearlevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbyearlevelActionPerformed

    private void txtteacherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtteacherKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from teachertable where teacher_first like'" + txtteacher.getText().toUpperCase() + "%' or teacher_last like'" + txtteacher.getText().toUpperCase() + "%'");
                DefaultTableModel teachermodel = ((DefaultTableModel)tblteacher.getModel());
                teachermodel.getDataVector().removeAllElements();
                
                while(rs.next()){
                    teachermodel.addRow(new Object[]{rs.getString(2), rs.getString(4)});
                    lblteacherid.setText(rs.getString(1));
                    lblid.setText(rs.getString(1));
                    lblname.setText(rs.getString(2));
                    teacheridresult = rs.getString(1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
        
    }//GEN-LAST:event_txtteacherKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int ask = JOptionPane.showConfirmDialog(this, "Do you want to save this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(ask == JOptionPane.YES_OPTION){
            try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from yearlevel where yearlevelname like'" + cbyearlevel.getSelectedItem().toString().toUpperCase() + "%'");
                
                if(rs.next()){
                    lblyearlevelid.setText(rs.getString(1));
                }
                
                String savequery = "insert into section values(?,?,?,?)";
                pstmt = conn.prepareStatement(savequery);
                pstmt.setString(1, txtsectionid.getText().toUpperCase());
                pstmt.setString(2, txtsectcionname.getText().toUpperCase());
                pstmt.setString(3, lblteacherid.getText().toUpperCase());
                pstmt.setString(4, lblyearlevelid.getText().toUpperCase());
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been saved");
                txtsectionid.setText(null);
                txtsectcionname.setText(null);
                lblteacherid.setText(null);
                lblyearlevelid.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblid.setText(null);
                txtteacher.setText(null);
                lblname.setText(null);
                sectiontable();
                loadteacher();
             //   loadtable();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int askdelete = JOptionPane.showConfirmDialog(this, "Do you want to delete this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askdelete == JOptionPane.YES_OPTION){
            try {
                conn = mycon.con;
                String deletedata = "delete from section where sectionid=?";
                pstmt = conn.prepareStatement(deletedata);
                pstmt.setString(1, txtsectionid.getText().toUpperCase());
                pstmt.execute();
               
                /*
                PreparedStatement deleteenrollstudentdata;
                PreparedStatement deleteenrolladdsubject;
                PreparedStatement deletegrade;
                
                String queryernollstudent = "delete from enrollstudentrecord where sectionid=?";
                deleteenrollstudentdata = conn.prepareStatement(queryernollstudent);
                deleteenrollstudentdata.setString(1, txtsectionid.getText());
                deleteenrollstudentdata.execute();
                
                String queryenrolladdsubject = "delete from enrolladdsubject where sectionid=?";
                deleteenrolladdsubject = conn.prepareStatement(queryenrolladdsubject);
                deleteenrolladdsubject.setString(1, txtsectionid.getText().toUpperCase());
                deleteenrolladdsubject.execute();
                
                stmt = conn.createStatement();
                rs = stmt.executeQuery("SELECT \n" +
"  enrolladdsubject.enrollstudentid\n" +
"FROM \n" +
"  public.section, \n" +
"  public.enrolladdsubject\n" +
"WHERE \n" +
"  enrolladdsubject.sectionid = section.sectionid and section.sectionid='" + txtsectionid.getText().toUpperCase() + "'");
                ArrayList<String> subject = new ArrayList<>();
                while(rs.next()){
                    subject.add(rs.getString(1));
                }
                 int graderesult=0;
            for(int result=0;result<subject.size();result++){
                String grade = subject;
                String querydeletegrade = "delete from grade where enrollstudentid=?";
                deletegrade = conn.prepareStatement(querydeletegrade);
                deletegrade.execute();
            }*/
                
                
                
                JOptionPane.showMessageDialog(this, "Data has been deleted");
                
                txtsectionid.setText(null);
                txtsectcionname.setText(null);
                txtteacher.setText(null);
                lblteacherid.setText(null);
                lblyearlevelid.setText(null);
                txtsearch.setText(null);
                lblid.setText(null);
                lblname.setText(null);
                sectiontable();
                loadteacher();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  section.sectionid, \n" +
"  section.sectionname, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_first, \n" +
"  category.categoryname, \n" +
"  teachertable.teacher_id, \n" +
"  teachertable.teacher_first, \n" +
"  section.yearlevelid \n" +
"FROM \n" +
"  public.teachertable, \n" +
"  public.section, \n" +
"  public.yearlevel, \n" +
"  public.category\n" +
"WHERE \n" +
"  section.teacherid = teachertable.teacher_id AND\n" +
"  section.yearlevelid = yearlevel.yearlevelid AND\n" +
"  yearlevel.categoryid = category.categoryid and sectionname like'" + txtsearch.getText().toUpperCase() + "%'");
          DefaultTableModel model = ((DefaultTableModel)tblsection.getModel());
            model.getDataVector().removeAllElements();
        
        while(rs.next()){
            model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            txtsectionid.setText(rs.getString(1));
            txtsectcionname.setText(rs.getString(2));
            cbyearlevel.setSelectedItem(rs.getString(3));
            teacheridresult = rs.getString(6);
            sectionid = rs.getString(1);
            lblid.setText(rs.getString(6));
            lblname.setText(rs.getString(7));
         
        }
              
     
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int askupdate = JOptionPane.showConfirmDialog(this, "Do you want to update this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askupdate == JOptionPane.YES_OPTION){
            try {
                conn = mycon.con;
                String query = "update section set sectionid=?, sectionname=?, teacherid=?, yearlevelid=? where sectionid=?";
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from yearlevel where yearlevelname='" + cbyearlevel.getSelectedItem().toString() + "'");
                
                if(rs.next()){
                    yearlevelid = rs.getString(1);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, txtsectionid.getText().toUpperCase());
                pstmt.setString(2, txtsectcionname.getText().toUpperCase());
                pstmt.setString(3, teacheridresult);
                pstmt.setString(4, yearlevelid);
                pstmt.setString(5, sectionid);
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been updated");
                sectiontable();
                loadteacher();
                txtsectionid.setText(null);
                txtsectcionname.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblid.setText(null);
                lblname.setText(null);
                txtteacher.setText(null);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       loadteacher();
       sectiontable();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       try {
            conn = mycon.con;
            String querydeleteall = "delete from section";
            pstmt = conn.prepareStatement(querydeleteall);
            pstmt.execute();
            
            JOptionPane.showMessageDialog(this, "Data has been deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           if(txtsearch.getText().isEmpty()){
               
           }else{
                try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  section.sectionid, \n" +
"  section.sectionname, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_first, \n" +
"  category.categoryname, \n" +
"  teachertable.teacher_id, \n" +
"  teachertable.teacher_first, \n" +
"  section.yearlevelid \n" +
"FROM \n" +
"  public.teachertable, \n" +
"  public.section, \n" +
"  public.yearlevel, \n" +
"  public.category\n" +
"WHERE \n" +
"  section.teacherid = teachertable.teacher_id AND\n" +
"  section.yearlevelid = yearlevel.yearlevelid AND\n" +
"  yearlevel.categoryid = category.categoryid and sectionname like'" + txtsearch.getText().toUpperCase() + "%'");
          DefaultTableModel model = ((DefaultTableModel)tblsection.getModel());
            model.getDataVector().removeAllElements();
        
        while(rs.next()){
            model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            txtsectionid.setText(rs.getString(1));
            txtsectcionname.setText(rs.getString(2));
            cbyearlevel.setSelectedItem(rs.getString(3));
            teacheridresult = rs.getString(6);
            sectionid = rs.getString(1);
            lblid.setText(rs.getString(6));
            lblname.setText(rs.getString(7));
         
        }
              
     
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
           }
       }
    }//GEN-LAST:event_txtsearchKeyReleased

    private void tblteacherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblteacherMouseClicked
        try {
            int teacherrow = tblteacher.getSelectedRow();
            
            String teacherrow1 = (tblteacher.getModel().getValueAt(teacherrow, 0).toString());
            
            conn = mycon.con;
            String teacherquery = "select * from teachertable where teacher_id='" + teacherrow1 + "'";
            pstmt = conn.prepareStatement(teacherquery);
            rs = pstmt.executeQuery();
            
         if(rs.next()){
                    lblteacherid.setText(rs.getString(1));
                    lblid.setText(rs.getString(1));
                    lblname.setText(rs.getString(2));
                    teacheridresult = rs.getString(1);
                }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblteacherMouseClicked

    private void tblsectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsectionMouseClicked
        try {
            int sectionrow = tblsection.getSelectedRow();
            
            String sectionrow1 = (tblsection.getModel().getValueAt(sectionrow, 0).toString());
            conn = mycon.con;
            String sectionquery = "SELECT \n" +
"  section.sectionid, \n" +
"  section.sectionname, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_first, \n" +
"  category.categoryname, \n" +
"  teachertable.teacher_id, \n" +
"  teachertable.teacher_first, \n" +
"  section.yearlevelid \n" +
"FROM \n" +
"  public.teachertable, \n" +
"  public.section, \n" +
"  public.yearlevel, \n" +
"  public.category\n" +
"WHERE \n" +
"  section.teacherid = teachertable.teacher_id AND\n" +
"  section.yearlevelid = yearlevel.yearlevelid AND\n" +
"  yearlevel.categoryid = category.categoryid and sectionid='" + sectionrow1 + "'";
            pstmt = conn.prepareStatement(sectionquery);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                 txtsectionid.setText(rs.getString(1));
            txtsectcionname.setText(rs.getString(2));
            cbyearlevel.setSelectedItem(rs.getString(3));
            teacheridresult = rs.getString(6);
            sectionid = rs.getString(1);
            lblid.setText(rs.getString(6));
            lblname.setText(rs.getString(7));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblsectionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearchteacher;
    private javax.swing.JComboBox<String> cbyearlevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblsectionid;
    private javax.swing.JLabel lblteacherid;
    private javax.swing.JLabel lblyearlevelid;
    private javax.swing.JTable tblsection;
    private javax.swing.JTable tblteacher;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtsectcionname;
    private javax.swing.JTextField txtsectionid;
    private javax.swing.JTextField txtteacher;
    // End of variables declaration//GEN-END:variables
}
