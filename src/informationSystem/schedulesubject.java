/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class schedulesubject extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        String timeid;
        String dayid;
    public schedulesubject() {
        initComponents();
        mycon.doConnect();
        subjecttable();
        scheduleday();
        scheduletime();
        yearleveltable();
        schedule();
    }
    
    void subjecttable(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit\n" +
"FROM \n" +
"  public.subject, \n" +
"  public.yearlevel\n" +
"WHERE \n" +
"  yearlevel.yearlevelid = subject.yearlevelid;");
            DefaultTableModel model = ((DefaultTableModel)tblsubject.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
    
    void scheduletime(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from scheduledummytime");
            
            while(rs.next()){
                cbtime.addItem(rs.getString(2));
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    void scheduleday(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from scheduledummyday");
            
            while(rs.next()){
                cbday.addItem(rs.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
    void yearleveltable(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from yearlevel");
            while(rs.next()){
                cbyearlevel.addItem(rs.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
    void schedule(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  scheduledummyday.day, \n" +
"  scheduledummytime.\"time\"\n" +
"FROM \n" +
"  public.schedule, \n" +
"  public.scheduledummyday, \n" +
"  public.scheduledummytime, \n" +
"  public.subject\n" +
"WHERE \n" +
"  schedule.subjectid = subject.subjectid AND\n" +
"  scheduledummyday.dayid = schedule.dayid AND\n" +
"  scheduledummytime.timeid = schedule.timeid;");
            DefaultTableModel model = ((DefaultTableModel)tblschedule.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblsubject = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbyearlevel = new javax.swing.JComboBox<>();
        cbtime = new javax.swing.JComboBox<>();
        cbday = new javax.swing.JComboBox<>();
        btnenter = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblsubjecttitle = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblsubjectid = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbltime = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblschedule = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setLayout(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 520, 100);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Save-icon.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton3.setText("Edit");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/clear icon.png"))); // NOI18N
        jButton4.setText("Clear");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 100, 550, 60);

        tblsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Subject ID", "Title", "Unit"
            }
        ));
        tblsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsubjectMouseClicked(evt);
            }
        });
        tblsubject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblsubjectKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblsubject);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 650, 540, 100);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("Time");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(50, 190, 70, 24);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Day");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 230, 70, 24);

        jPanel1.add(cbyearlevel);
        cbyearlevel.setBounds(100, 430, 330, 30);

        jPanel1.add(cbtime);
        cbtime.setBounds(140, 190, 330, 30);

        jPanel1.add(cbday);
        cbday.setBounds(140, 230, 330, 30);

        btnenter.setText("Enter");
        btnenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenterActionPerformed(evt);
            }
        });
        jPanel1.add(btnenter);
        btnenter.setBounds(210, 470, 120, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Select Yearlevel");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(190, 400, 160, 24);

        lblsubjecttitle.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblsubjecttitle);
        lblsubjecttitle.setBounds(130, 540, 360, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel6.setText("Subject ID:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 510, 160, 24);

        lblsubjectid.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblsubjectid);
        lblsubjectid.setBounds(130, 510, 350, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel5.setText("Day:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 610, 50, 24);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel7.setText("Title:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 540, 50, 24);

        lblday.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblday.setForeground(new java.awt.Color(0, 51, 255));
        jPanel1.add(lblday);
        lblday.setBounds(130, 610, 350, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel9.setText("Time:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 580, 50, 24);

        lbltime.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lbltime.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.add(lbltime);
        lbltime.setBounds(130, 580, 350, 30);

        tblschedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Subject ID", "Title", "Unit", "Day", "Time"
            }
        ));
        tblschedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblscheduleMouseClicked(evt);
            }
        });
        tblschedule.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblscheduleKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblschedule);
        if (tblschedule.getColumnModel().getColumnCount() > 0) {
            tblschedule.getColumnModel().getColumn(3).setHeaderValue("Day");
            tblschedule.getColumnModel().getColumn(4).setHeaderValue("Time");
        }

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 270, 550, 120);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenterActionPerformed
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit\n" +
"FROM \n" +
"  public.subject, \n" +
"  public.yearlevel\n" +
"WHERE \n" +
"  subject.yearlevelid = yearlevel.yearlevelid and yearlevel.yearlevelname='" + cbyearlevel.getSelectedItem().toString() + "'");
            DefaultTableModel model = ((DefaultTableModel)tblsubject.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3)});
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_btnenterActionPerformed

    private void tblsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsubjectMouseClicked
       try {
            int studentrow = tblsubject.getSelectedRow();
            String selectrow1 = (tblsubject.getModel().getValueAt(studentrow, 0).toString());
            
            String tablequery = "SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit\n" +
"FROM \n" +
"  public.subject, \n" +
"  public.yearlevel\n" +
"WHERE \n" +
"  subject.yearlevelid = yearlevel.yearlevelid and subject.subjectid='" + selectrow1 + "'";
            pstmt = conn.prepareStatement(tablequery);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
               lblsubjectid.setText(rs.getString(1));
               lblsubjecttitle.setText(rs.getString(2));
            }
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblsubjectMouseClicked

    private void tblsubjectKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblsubjectKeyReleased
         
    }//GEN-LAST:event_tblsubjectKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int asksave = JOptionPane.showConfirmDialog(this, "Save schedule?", "Messagge", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(asksave == JOptionPane.YES_OPTION){
            Statement timesched;
            Statement daysched;
            ResultSet timeresult;
            ResultSet dayresult;
            try {
                
                conn = mycon.con;
                timesched = conn.createStatement();
                timeresult = timesched.executeQuery("select * from scheduledummytime where time='" + cbtime.getSelectedItem().toString() + "'");
                 if(timeresult.next()){
                     timeid = timeresult.getString(1);
                 }
                 daysched = conn.createStatement();
                 dayresult = daysched.executeQuery("select * from scheduledummyday where day='" + cbday.getSelectedItem().toString() + "'");
                 
                 if(dayresult.next()){
                     dayid = dayresult.getString(1);
                 }
                String querysave = "insert into schedule values(?,?,?)";
                pstmt = conn.prepareStatement(querysave);
                pstmt.setInt(2, Integer.parseInt(timeid));
                pstmt.setInt(3, Integer.parseInt(dayid));
                pstmt.setString(1, lblsubjectid.getText().toUpperCase());
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Schedule Saved");
                cbday.setSelectedIndex(0);
                cbyearlevel.setSelectedIndex(0);
                lblsubjectid.setText(null);
                lblsubjecttitle.setText(null);
                cbday.setSelectedIndex(0);
                cbtime.setSelectedIndex(0);
                subjecttable();
                schedule();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int askdelete = JOptionPane.showConfirmDialog(this, "Do you want to delete this data?" , "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askdelete == JOptionPane.YES_OPTION){
               if(lblsubjectid.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select the subject first");
        }else{
            try {
                conn = mycon.con;
                String querydelete = "delete from schedule where subjectid=?";
                pstmt = conn.prepareStatement(querydelete);
                pstmt.setString(1, lblsubjectid.getText());
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Schedule has been deleted");
                cbday.setSelectedIndex(0);
                cbyearlevel.setSelectedIndex(0);
                lblsubjectid.setText(null);
                lblsubjecttitle.setText(null);
                cbday.setSelectedIndex(0);
                cbtime.setSelectedIndex(0);
                lbltime.setText(null);
                lblday.setText(null);
                subjecttable();
                schedule();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
        }
     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int askedit = JOptionPane.showConfirmDialog(this, "Do you want to update the schedule?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askedit == JOptionPane.YES_OPTION){
            if(lblsubjectid.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please select the subject first");
            }else{
                     Statement timesched;
            Statement daysched;
            ResultSet timeresult;
            ResultSet dayresult;
                try {
                    conn = mycon.con;
                    timesched = conn.createStatement();
                timeresult = timesched.executeQuery("select * from scheduledummytime where time='" + cbtime.getSelectedItem().toString() + "'");
                 if(timeresult.next()){
                     timeid = timeresult.getString(1);
                 }
                 daysched = conn.createStatement();
                 dayresult = daysched.executeQuery("select * from scheduledummyday where day='" + cbday.getSelectedItem().toString() + "'");
                 
                 if(dayresult.next()){
                     dayid = dayresult.getString(1);
                 }
                    String queryupdate = "update schedule set time=?, day=? where subjectid=?";
                    pstmt = conn.prepareStatement(queryupdate);
                    pstmt.setInt(1, Integer.parseInt(timeid));
                    pstmt.setInt(2, Integer.parseInt(dayid));
                    pstmt.setString(3, lblsubjectid.getText().toUpperCase());
                    pstmt.execute();
                    
                    JOptionPane.showMessageDialog(this, "The schedule has been updated");
                    cbday.setSelectedIndex(0);
                cbyearlevel.setSelectedIndex(0);
                lblsubjectid.setText(null);
                lblsubjecttitle.setText(null);
                cbtime.setSelectedIndex(0);
                subjecttable();
                schedule();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        cbday.setSelectedIndex(0);
        cbtime.setSelectedIndex(0);
        cbyearlevel.setSelectedIndex(0);
        lblsubjectid.setText(null);
        lblsubjecttitle.setText(null);
        lbltime.setText(null);
        lblday.setText(null);
        subjecttable();
        schedule();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblscheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblscheduleMouseClicked
        try {
             Statement timesched;
            Statement daysched;
            ResultSet timeresult;
            ResultSet dayresult;
            int schedulerow = tblschedule.getSelectedRow();
            
            String schedulerow1 = (tblschedule.getModel().getValueAt(schedulerow, 0).toString());
            
            conn = mycon.con;
            String query = "SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  scheduledummyday.day, \n" +
"  scheduledummytime.\"time\"\n" +
"FROM \n" +
"  public.schedule, \n" +
"  public.scheduledummyday, \n" +
"  public.scheduledummytime, \n" +
"  public.subject\n" +
"WHERE \n" +
"  schedule.subjectid = subject.subjectid AND\n" +
"  scheduledummyday.dayid = schedule.dayid AND\n" +
"  scheduledummytime.timeid = schedule.timeid and subject.subjectid='" + schedulerow1 + "'";
            pstmt = conn.prepareStatement(query);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                lblsubjectid.setText(rs.getString(1));
                lblsubjecttitle.setText(rs.getString(2));
                lblday.setText(rs.getString(4));
                lbltime.setText(rs.getString(5));
              
            }
               
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblscheduleMouseClicked

    private void tblscheduleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblscheduleKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblscheduleKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnenter;
    private javax.swing.JComboBox<String> cbday;
    private javax.swing.JComboBox<String> cbtime;
    private javax.swing.JComboBox<String> cbyearlevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblday;
    private javax.swing.JLabel lblsubjectid;
    private javax.swing.JLabel lblsubjecttitle;
    private javax.swing.JLabel lbltime;
    private javax.swing.JTable tblschedule;
    private javax.swing.JTable tblsubject;
    // End of variables declaration//GEN-END:variables
}
