/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class enrollgraderecord extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        String enrollid;
    public enrollgraderecord() {
        initComponents();
        mycon.doConnect();
        subject();
        
    }
    
    void subject(){
        
        try {
            Statement graderecord;
        ResultSet graderecordresult;
          conn = mycon.con;
          stmt = conn.createStatement();
          rs = stmt.executeQuery("select * from enrollstudentgradedummy");
          
          if(rs.next()){
              enrollid = rs.getString(1);
          }
          
          graderecord = conn.createStatement();
          graderecordresult = graderecord.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  grade.subjectgrade\n" +
"FROM \n" +
"  public.subject, \n" +
"  public.grade\n" +
"WHERE \n" +
"  subject.subjectid = grade.subjectid and grade.enrollstudentid='" + enrollid + "'");
          DefaultTableModel model = ((DefaultTableModel)tblsubject.getModel());
          model.getDataVector().removeAllElements();
          
          while(graderecordresult.next()){
              model.addRow(new Object[] {graderecordresult.getString(1), graderecordresult.getString(2), graderecordresult.getString(3)});
          }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblsubject = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblsubjectid = new javax.swing.JLabel();
        lbltitle = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtgrade = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        tblsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Subject ID", "Title", "Grade"
            }
        ));
        tblsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsubjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblsubject);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel1.setText("Subject ID");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("Title");

        lblsubjectid.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        lbltitle.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Save-icon.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton2.setText("Update");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Grade");

        txtgrade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgradeKeyTyped(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (2).png"))); // NOI18N
        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblsubjectid, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                            .addComponent(lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(lblsubjectid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsubjectMouseClicked
        try {
            int subjectrow = tblsubject.getSelectedRow();
            
            String subjectrow1 = (tblsubject.getModel().getValueAt(subjectrow, 0).toString());
            
            conn = mycon.con;
            String query = "SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  grade.subjectgrade\n" +
"FROM \n" +
"  public.grade, \n" +
"  public.subject, \n" +
"  public.enrollstudentgradedummy\n" +
"WHERE \n" +
"  subject.subjectid = grade.subjectid AND\n" +
"  enrollstudentgradedummy.enrollstudentid = grade.enrollstudentid and enrollstudentgradedummy.enrollstudentid='" + enrollid + "' and subject.subjectid='" + subjectrow1 + "'";
            
            pstmt = conn.prepareStatement(query);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                lblsubjectid.setText(rs.getString(1));
                lbltitle.setText(rs.getString(2));
                txtgrade.setText(rs.getString(3));
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tblsubjectMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int asksave = JOptionPane.showConfirmDialog(this, "Record Grade?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(asksave == JOptionPane.YES_OPTION){
            if(txtgrade.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please input the grade first");
            }else{
                PreparedStatement graderecord;
                try {
                    conn = mycon.con;
                    String query = "update grade set subjectgrade=? where subjectid=? and enrollstudentid=?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setInt(1, Integer.parseInt(txtgrade.getText()));
                    pstmt.setString(2, lblsubjectid.getText().toUpperCase());
                    pstmt.setString(3, enrollid);
                    pstmt.execute();
                    
                    String queryrecord = "update recordgrade set subjectgrade=? where subjectid=? and enrollstudentid=?";
                    graderecord = conn.prepareStatement(queryrecord);
                    graderecord.setInt(1, Integer.parseInt(txtgrade.getText()));
                    graderecord.setString(2, lblsubjectid.getText());
                    graderecord.setString(3, enrollid);
                    graderecord.execute();
                    
                    JOptionPane.showMessageDialog(this, "Grade has been recorded");
                    lblsubjectid.setText(null);
                    lbltitle.setText(null);
                    txtgrade.setText(null);
                    subject();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int asksave = JOptionPane.showConfirmDialog(this, "Update grade?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(asksave == JOptionPane.YES_OPTION){
            if(txtgrade.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please input the grade first");
            }else{
                PreparedStatement graderecord;
                try {
                    conn = mycon.con;
                    String query = "update grade set subjectgrade=? where subjectid=?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setInt(1, Integer.parseInt(txtgrade.getText()));
                    pstmt.setString(2, lblsubjectid.getText().toUpperCase());
                    pstmt.execute();
                    
                    String queryrecord = "update recordgrade set subjectgrade=? where subjectid=?";
                    pstmt = conn.prepareStatement(queryrecord);
                    pstmt.setInt(1, Integer.parseInt(txtgrade.getText()));
                    pstmt.setString(2, lblsubjectid.getText());
                    pstmt.execute();
                    
                    JOptionPane.showMessageDialog(this, "Grade has been recorded");
                    lblsubjectid.setText(null);
                    lbltitle.setText(null);
                    txtgrade.setText(null);
                    subject();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
          conn = mycon.con;
          String query = "delete from enrollstudentgradedummy";
          pstmt = conn.prepareStatement(query);
          pstmt.execute();
          this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int askdelete = JOptionPane.showConfirmDialog(this, "Delete grade?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askdelete == JOptionPane.YES_OPTION){
            if(lblsubjectid.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Please select first the subject");
            }else{
                PreparedStatement deletegrade;
                try {
                    conn = mycon.con;
                    String query = "update grade set subjectgrade=null where subjectid=? and enrollstudentid=?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, lblsubjectid.getText());
                    pstmt.setString(2, enrollid);
                    pstmt.execute();
                    
                    String querydeletegrade = "update recordgrade set subjectgrade=null where subjectid=? and enrollstudentid=?";
                    deletegrade = conn.prepareStatement(querydeletegrade);
                    deletegrade.setString(1, lblsubjectid.getText());
                    deletegrade.setString(2, enrollid);
                    deletegrade.execute();
                    
                    JOptionPane.showMessageDialog(this, "Grade has been deleted");
                    lblsubjectid.setText(null);
                    lbltitle.setText(null);
                    txtgrade.setText(null);
                    subject();
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtgradeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgradeKeyTyped
        char savebutton = evt.getKeyChar();
        if(!(Character.isDigit(savebutton)) || (savebutton == KeyEvent.VK_BACK_SPACE) || (savebutton == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtgradeKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblsubjectid;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tblsubject;
    private javax.swing.JTextField txtgrade;
    // End of variables declaration//GEN-END:variables
}
