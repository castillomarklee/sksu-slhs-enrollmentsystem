/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javafx.scene.input.KeyCode;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class addsubject extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        String yearlevelid;
        String teacherid;
        String subjectid;
    public addsubject() {
        initComponents();
        mycon.doConnect();
        teachertable();
        subjecttable();
        yearlevel();
        semeseter();
    }
    
      void center(){

    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize() ;
    Dimension jscreen = this.getSize();

    this.setLocation((screen.width - jscreen.width)/2, ((screen.height-jscreen.height)/2)-90);

    } 
    
    void teachertable(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from teachertable");
            
            DefaultTableModel model = ((DefaultTableModel) tblteacher.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
                
            }
        } catch (Exception e) {
        }
    }
    
    void yearlevel(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from yearlevel");
            
            while(rs.next()){
                cbyearlevel.addItem(rs.getString(2));
            }
        } catch (Exception e) {
        }
    }
    
    void semeseter(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from semester");
            
            while(rs.next()){
                cbsemester.addItem(rs.getString(2));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
  
    
    
    void subjecttable(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_first, \n" +
"  subject.semester \n" +
"FROM \n" +
"  public.yearlevel, \n" +
"  public.subject, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  yearlevel.yearlevelid = subject.yearlevelid AND\n" +
"  subject.teacherid = teachertable.teacher_id;");
            
            DefaultTableModel model = ((DefaultTableModel) tblsubject.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
        } catch (Exception e) {
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtsubjectteacher = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtsubjecttitle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtsubjectunit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        cbyearlevel = new javax.swing.JComboBox<>();
        lblteachername = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblteacherid = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblteacher = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsubject = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtsubjectid = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbsemester = new javax.swing.JComboBox<>();

        setClosable(true);

        jPanel1.setLayout(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 560, 100);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Save-icon.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton3.setText("Update");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Close-icon.png"))); // NOI18N
        jButton4.setText("Back");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/view icon.png"))); // NOI18N
        jButton5.setText("Show all data");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 100, 1300, 80);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel1.setText("Teacher Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 470, 160, 30);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("Subject ID");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 200, 120, 30);

        txtsubjectteacher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsubjectteacherKeyReleased(evt);
            }
        });
        jPanel1.add(txtsubjectteacher);
        txtsubjectteacher.setBounds(180, 410, 250, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Subject Title");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 240, 140, 30);
        jPanel1.add(txtsubjecttitle);
        txtsubjecttitle.setBounds(180, 240, 350, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Subject Unit");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 280, 140, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel5.setText("Semester");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 360, 140, 30);

        txtsubjectunit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsubjectunitKeyTyped(evt);
            }
        });
        jPanel1.add(txtsubjectunit);
        txtsubjectunit.setBounds(180, 280, 350, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel6.setText("Yearlevel");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 320, 140, 30);

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(440, 410, 90, 30);

        jPanel1.add(cbyearlevel);
        cbyearlevel.setBounds(180, 320, 350, 30);

        lblteachername.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblteachername);
        lblteachername.setBounds(180, 470, 350, 30);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel9.setText("Teacher ID");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 440, 160, 30);

        lblteacherid.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jPanel1.add(lblteacherid);
        lblteacherid.setBounds(180, 440, 350, 30);

        tblteacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Teacher ID", "Firstname", "Middlename", "Lastname"
            }
        ));
        tblteacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblteacherMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblteacher);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 510, 530, 100);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(null);

        tblsubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Subject ID", "Title", "Unit", "Yearlevel", "Teacher", "Semester"
            }
        ));
        tblsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsubjectMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblsubject);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 102, 730, 300);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel7.setText("Search");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(40, 40, 70, 30);

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel3.add(txtsearch);
        txtsearch.setBounds(130, 40, 480, 30);

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel3.add(btnsearch);
        btnsearch.setBounds(620, 33, 110, 40);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(550, 200, 740, 410);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel8.setText("Subject Teacher");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 410, 160, 30);
        jPanel1.add(txtsubjectid);
        txtsubjectid.setBounds(180, 200, 350, 30);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel10.setText("Yearlevel");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 320, 140, 30);

        cbsemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JUNIOR SEMESTER" }));
        jPanel1.add(cbsemester);
        cbsemester.setBounds(180, 360, 350, 30);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1299, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1084, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtsubjectteacherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsubjectteacherKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(txtsubjectteacher.getText().isEmpty()){
            txtsearch.setText(null);
            txtsubjecttitle.setText(null);
            txtsubjectunit.setText(null);
            cbyearlevel.setSelectedIndex(0);
             
      }else{
            try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from teachertable where teacher_first like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_middle like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_last like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_id like'" + txtsubjectteacher.getText().toUpperCase() + "%'");
                
                while(rs.next()){
                    lblteacherid.setText(rs.getString(1));
                    lblteachername.setText(rs.getString(2));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }}
    }//GEN-LAST:event_txtsubjectteacherKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from teachertable where teacher_first like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_middle like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_last like'" + txtsubjectteacher.getText().toUpperCase() + "%' or teacher_id like'" + txtsubjectteacher.getText().toUpperCase() + "%'");
                
                while(rs.next()){
                    lblteacherid.setText(rs.getString(1));
                    lblteachername.setText(rs.getString(2));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int asksave = JOptionPane.showConfirmDialog(this, "Do you want to save this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(asksave == JOptionPane.YES_OPTION){
            try {
                conn = mycon.con;
                String query = "insert into subject values(?,?,?,?,?,?)";
                pstmt = conn.prepareStatement(query);
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from yearlevel where yearlevelname='" + cbyearlevel.getSelectedItem().toString() + "'");
                
                while(rs.next()){
                    yearlevelid = rs.getString(1);
                }
                
                pstmt.setString(1, txtsubjectid.getText().toUpperCase());
                pstmt.setString(2, txtsubjecttitle.getText().toUpperCase());
                pstmt.setInt(3, Integer.parseInt(txtsubjectunit.getText()));
                pstmt.setString(4, yearlevelid);
                pstmt.setString(5, lblteacherid.getText().toUpperCase());
                pstmt.setString(6, cbsemester.getSelectedItem().toString());
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been saved");
                subjecttable();
                teachertable();
                
                txtsubjectid.setText(null);
                txtsubjecttitle.setText(null);
                txtsubjectunit.setText(null);
                txtsubjectteacher.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblteacherid.setText(null);
                lblteachername.setText(null);
                cbsemester.setSelectedIndex(0);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int askdelete = JOptionPane.showConfirmDialog(this, "Do you want to delete this data?", "Message", + JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(askdelete == JOptionPane.YES_OPTION){
            PreparedStatement grade;
            PreparedStatement recordgrade;
            PreparedStatement schedule;
            try {
                conn = mycon.con;
                String deletequery = "delete from subject where subjectid=?";
                pstmt = conn.prepareStatement(deletequery);
                pstmt.setString(1, txtsubjectid.getText().toUpperCase());
                pstmt.execute();
                
                String gradequery = "delete from grade where subjectid=?";
                grade = conn.prepareStatement(gradequery);
                grade.setString(1, txtsubjectid.getText().toUpperCase());
                grade.execute();
                
                String recordgradequery = "delete from recordgrade where subjectid=?";
                recordgrade = conn.prepareStatement(recordgradequery);
                recordgrade.setString(1, txtsubjectid.getText().toUpperCase());
                recordgrade.execute();
                
                String schedulequery = "delete from schedule where subjectid=?";
                schedule = conn.prepareStatement(schedulequery);
                schedule.setString(1, txtsubjectid.getText().toUpperCase());
                schedule.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been deleted");
                subjecttable();
                teachertable();
                txtsearch.setText(null);
                txtsubjecttitle.setText(null);
                txtsubjectunit.setText(null);
                txtsubjectteacher.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblteacherid.setText(null);
                lblteachername.setText(null);
                txtsubjectid.setText(null);
                cbsemester.setSelectedIndex(0);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int askupdate = JOptionPane.showConfirmDialog(this, "Do you want to update this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        
        if(askupdate == JOptionPane.YES_OPTION){
            PreparedStatement grade;
            PreparedStatement recordgrade;
            try {
                conn = mycon.con;
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from yearlevel where yearlevelname='" + cbyearlevel.getSelectedItem().toString() + "'");
                
                if(rs.next()){
                    yearlevelid = rs.getString(1);
                }
                
                String updatequery = "update subject set subjectid=?, subjecttitle=?, subjectunit=?, yearlevelid=?, teacherid=?, semester=? where subjectid=?";
                pstmt = conn.prepareStatement(updatequery);
                pstmt.setString(1, txtsubjectid.getText().toUpperCase());
                pstmt.setString(2, txtsubjecttitle.getText().toUpperCase());
                pstmt.setString(3, txtsubjectunit.getText().toUpperCase());
                pstmt.setString(4, yearlevelid);
                pstmt.setString(5, lblteacherid.getText().toUpperCase());
                pstmt.setString(6, cbsemester.getSelectedItem().toString());
                pstmt.setString(7, subjectid);
                pstmt.execute();
                
                String gradequery = "update grade set subjectid=? where subjectid=?";
                grade = conn.prepareStatement(gradequery);
                grade.setString(1, txtsubjectid.getText().toUpperCase());
                grade.setString(2, subjectid);
                grade.execute();
                
                String recordgradequery = "update recordgrade set subjectid=? where subjectid=?";
                recordgrade = conn.prepareStatement(recordgradequery);
                recordgrade.setString(1, txtsubjectid.getText().toUpperCase());
                recordgrade.setString(2, subjectid);
                recordgrade.execute();
                
                JOptionPane.showMessageDialog(this, "Data has been updated");
                txtsearch.setText(null);
                txtsubjecttitle.setText(null);
                txtsubjectunit.setText(null);
                txtsubjectteacher.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblteacherid.setText(null);
                lblteachername.setText(null);
                txtsubjectid.setText(null);
                subjecttable();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(txtsearch.getText().isEmpty()){
                
            }else{
                try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_id, \n" +
"  teachertable.teacher_first, \n" +
"  subject.semester\n" +
"FROM \n" +
"  public.yearlevel, \n" +
"  public.subject, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  yearlevel.yearlevelid = subject.yearlevelid AND\n" +
"  subject.teacherid = teachertable.teacher_id and subject.subjecttitle like'" + txtsearch.getText().toUpperCase() + "%'");
            
            DefaultTableModel model = ((DefaultTableModel) tblsubject.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs .getString(4), rs.getString(6), rs.getString(7)});
                txtsubjectid.setText(rs.getString(1));
                txtsubjecttitle.setText(rs.getString(2));
                txtsubjectunit.setText(rs.getString(3));
                yearlevelid = rs.getString(4);
                cbyearlevel.setSelectedItem(rs.getString(4));
                cbsemester.setSelectedItem(rs.getString(7));
                lblteacherid.setText(rs.getString(5));
                lblteachername.setText(rs.getString(6));
                
                Statement teacherstatement;
                ResultSet teacherresult;
                
                teacherstatement = conn.createStatement();
                teacherresult = teacherstatement.executeQuery("select * from teachertable where teacher_id like'" + lblteachername.getText() + "%'");
                
                if(teacherresult.next()){
                    lblteacherid.setText(rs.getString(1));
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
            }
        }
        
        
    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
         try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_id\n" +
"FROM \n" +
"  public.yearlevel, \n" +
"  public.subject, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  yearlevel.yearlevelid = subject.yearlevelid AND\n" +
"  subject.teacherid = teachertable.teacher_id and subjecttitle like'" + txtsearch.getText().toUpperCase() + "%' or subjectid like'" + txtsearch.getText().toUpperCase() + "%' or subjectunit like'" + txtsearch.getText().toUpperCase() + "%'");
            
          
            
            DefaultTableModel model = ((DefaultTableModel) tblsubject.getModel());
            model.getDataVector().removeAllElements();
            
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
                txtsubjectid.setText(rs.getString(1));
                txtsubjecttitle.setText(rs.getString(2));
                txtsubjectunit.setText(rs.getString(3));
                cbyearlevel.setSelectedItem(rs.getString(4));
                lblteacherid.setText(rs.getString(5));
                subjectid = rs.getString(1);
                
                Statement teacherstatement;
                ResultSet teacherresult;
                
                teacherstatement = conn.createStatement();
                teacherresult = teacherstatement.executeQuery("select * from teachertable where teacher_id like'" + lblteacherid.getText().toUpperCase() + "%'");
                
                if(teacherresult.next()){
                    lblteachername.setText(rs.getString(2));
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void tblsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsubjectMouseClicked
        try {
            int subjectrow = tblsubject.getSelectedRow();
            
            String subjectrow1 = (tblsubject.getModel().getValueAt(subjectrow, 1).toString());
            String subjectquery = "SELECT \n" +
"  subject.subjectid, \n" +
"  subject.subjecttitle, \n" +
"  subject.subjectunit, \n" +
"  yearlevel.yearlevelname, \n" +
"  teachertable.teacher_id, \n" +
"  teachertable.teacher_first, \n" +
"  subject.semester\n" +
"FROM \n" +
"  public.yearlevel, \n" +
"  public.subject, \n" +
"  public.teachertable\n" +
"WHERE \n" +
"  yearlevel.yearlevelid = subject.yearlevelid AND\n" +
"  subject.teacherid = teachertable.teacher_id and subjecttitle='" + subjectrow1 + "'";
            
            pstmt = conn.prepareStatement(subjectquery);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                txtsubjectid.setText(rs.getString(1));
                txtsubjecttitle.setText(rs.getString(2));
                txtsubjectunit.setText(rs.getString(3));
                cbyearlevel.setSelectedItem(rs.getString(4));
                lblteachername.setText(rs.getString(6));
                lblteacherid.setText(rs.getString(5));
                cbsemester.setSelectedItem(rs.getString(7));
                subjectid = rs.getString(1);
            }
            
        } catch (Exception e) {
        }

    }//GEN-LAST:event_tblsubjectMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         teachertable();
                subjecttable();
                teachertable();
                txtsubjectid.setText(null);
                txtsubjecttitle.setText(null);
                txtsubjectunit.setText(null);
                txtsubjectteacher.setText(null);
                cbyearlevel.setSelectedIndex(0);
                lblteacherid.setText(null);
                lblteachername.setText(null);
                cbsemester.setSelectedIndex(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtsubjectunitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsubjectunitKeyTyped
       char savebutton = evt.getKeyChar();
        if(!(Character.isDigit(savebutton)) || (savebutton == KeyEvent.VK_BACK_SPACE) || (savebutton == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtsubjectunitKeyTyped

    private void tblteacherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblteacherMouseClicked
        
        try {
            int teachertablerow = tblteacher.getSelectedRow();
            
            String teachertablerow1 = (tblteacher.getModel().getValueAt(teachertablerow, 0).toString());
            String teachertablerow2 = (tblteacher.getModel().getValueAt(teachertablerow, 1).toString());
            String teachertablerow3 = (tblteacher.getModel().getValueAt(teachertablerow, 2).toString());
            String teachertablerow4 = (tblteacher.getModel().getValueAt(teachertablerow, 3).toString());
            
            String teachertablerowquery = "select * from teachertable where teacher_id='" + teachertablerow1 + "' or teacher_first='" + teachertablerow2 + "' or teacher_middle='" + teachertablerow3 + "' or teacher_last='" + teachertablerow4 + "'";
            pstmt = conn.prepareStatement(teachertablerowquery);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                lblteacherid.setText(rs.getString(1));
                
                Statement teachertablestatement;
                ResultSet teachertableresult;
                
                teachertablestatement = conn.createStatement();
                teachertableresult = stmt.executeQuery("select * from teachertable where teacher_id='" + lblteacherid.getText().toUpperCase() + "'");
                
                if(teachertableresult.next()){
                    lblteachername.setText(rs.getString(2));
                }
           }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblteacherMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearch;
    private javax.swing.JComboBox<String> cbsemester;
    private javax.swing.JComboBox<String> cbyearlevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblteacherid;
    private javax.swing.JLabel lblteachername;
    private javax.swing.JTable tblsubject;
    private javax.swing.JTable tblteacher;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtsubjectid;
    private javax.swing.JTextField txtsubjectteacher;
    private javax.swing.JTextField txtsubjecttitle;
    private javax.swing.JTextField txtsubjectunit;
    // End of variables declaration//GEN-END:variables
}
