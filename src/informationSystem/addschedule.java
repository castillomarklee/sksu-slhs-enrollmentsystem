/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package informationSystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author castillo
 */
public class addschedule extends javax.swing.JInternalFrame {
        DBconnetion mycon = new DBconnetion();
        Connection conn;
        PreparedStatement pstmt;
        Statement stmt;
        ResultSet rs;
        String time;
        String enablebuttonscheduletime;
        String enablebuttonscheduleday;
        String updatedata;
    public addschedule() {
        initComponents();
        mycon.doConnect();
        scheduletime();
        scheduleday();
        tbltime.setEnabled(false);
        tbltime1.setEnabled(false);
        txttime.setEnabled(false);
        txtday.setEnabled(false);
        
    }
    
    void scheduletime(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from scheduledummytime");
            DefaultTableModel scheduletabe = ((DefaultTableModel)tbltime.getModel());
            scheduletabe.getDataVector().removeAllElements();
            
            while(rs.next()){
                scheduletabe.addRow(new Object[] {rs.getString(2)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }
    
    void scheduleday(){
        try {
            conn = mycon.con;
            stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from scheduledummyday");
            DefaultTableModel scheduletable = ((DefaultTableModel)tbltime1.getModel());
            scheduletable.getDataVector().removeAllElements();
            
            while(rs.next()){
                scheduletable.addRow(new Object[] {rs.getString(2)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltime = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txttime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtday = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbltime1 = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setLayout(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 90, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 470, 90);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Save-icon.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Delete-icon (1).png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Button-Refresh-icon.png"))); // NOI18N
        jButton4.setText("Update");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/view icon.png"))); // NOI18N
        jButton5.setText("Show all data");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/time icon.png"))); // NOI18N
        jButton1.setText("Time");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttonicons/Calendar-icon.png"))); // NOI18N
        jButton6.setText("Day");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(0, 90, 470, 70);

        tbltime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Time"
            }
        ));
        tbltime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltimeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbltime);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 260, 220, 190);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("Time");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 170, 70, 24);
        jPanel1.add(txttime);
        txttime.setBounds(90, 170, 300, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Day");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 210, 70, 24);
        jPanel1.add(txtday);
        txtday.setBounds(90, 210, 300, 30);

        tbltime1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Day"
            }
        ));
        tbltime1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltime1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbltime1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(240, 260, 230, 190);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PreparedStatement scheduleday;
        try {
            int asksave = JOptionPane.showConfirmDialog(this, "Do you want to save this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        String scheduletime = "enable";
        String scheduledayenable = "enablescheduleday";
        if(asksave == JOptionPane.YES_OPTION){
            if(scheduletime == enablebuttonscheduletime){
                if(txttime.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please input the data first");
                        
                    
                }else{
                    conn = mycon.con;
                String querytime = "insert into scheduledummytime(time) values(?)";
                pstmt = conn.prepareStatement(querytime);
                pstmt.setString(1, txttime.getText().toUpperCase());
                pstmt.execute();
                
                JOptionPane.showMessageDialog(this, "Schedule has been saved");
                txttime.setText(null);
                scheduletime();
                }
            }if(scheduledayenable == enablebuttonscheduleday){
                if(txtday.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please input the data first");
                }else{
                    String queryday = "insert into scheduledummyday(day) values(?)";
                scheduleday = conn.prepareStatement(queryday);
                scheduleday.setString(1, txtday.getText().toUpperCase());
                scheduleday.execute();
                
                JOptionPane.showMessageDialog(this, "Schedule has been saved");
                scheduleday();
                txtday.setText(null);
                }
               
            }
            
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       PreparedStatement scheduleday;
        try {
             int askdelete = JOptionPane.showConfirmDialog(this, "Do you want to delete this data?", "Message", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        String scheduletimeenable = "enable";
        String scheduledayenable = "enablescheduleday";
        if(askdelete == JOptionPane.YES_OPTION){
            if(scheduletimeenable == enablebuttonscheduletime){
                if(txttime.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please select the data first");
                }else{
                    String query = "delete from scheduledummytime where time=?";
                    pstmt = conn.prepareStatement(query);
                    pstmt.setString(1, txttime.getText().toUpperCase());
                    pstmt.execute();
                    
                    JOptionPane.showMessageDialog(this, "Schedule has been deleted");
                    scheduletime();
                    txttime.setText(null);
                }
                
            }if(scheduledayenable == enablebuttonscheduleday){
                
                if(txtday.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please select the data first");
                }else{
                    String queryday = "delete from scheduledummyday where day=?";
                    scheduleday = conn.prepareStatement(queryday);
                    scheduleday.setString(1, txtday.getText().toUpperCase());
                    scheduleday.execute();
                    
                    JOptionPane.showMessageDialog(this, "Schedule has been deleted");
                    txtday.setText(null);
                    scheduleday();
                }
            }
            
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PreparedStatement scheduledaybutton;
        try {
            int askdelete = JOptionPane.showConfirmDialog(this, "Do you want to update this data?", "Message", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE);
        String enablescheduletimebutton = "enable";
        String enablescheduledaybutton = "enablescheduleday";
        if(askdelete == JOptionPane.YES_OPTION){
          if(enablescheduletimebutton == enablebuttonscheduletime){
              if(txttime.getText().isEmpty()){
                  JOptionPane.showMessageDialog(this, "Please select first the data");
              }else{
                  String queryupdate = "update scheduledummytime set time=? where scheduletimeid=?";
                  pstmt = conn.prepareStatement(queryupdate);
                  pstmt.setString(1, txttime.getText().toUpperCase());
                  pstmt.setString(2, updatedata);
                  pstmt.execute();
                  
                  JOptionPane.showMessageDialog(this, "Schedule has been updated");
                  scheduletime();
                  txttime.setText(null);
                  
              } if(enablescheduledaybutton == enablebuttonscheduleday){
                  if(txtday.getText().isEmpty()){
                      JOptionPane.showMessageDialog(this, "Please select first the data");
                  }else{
                      String queryscheduleday = "update scheduledummyday set day=? where scheduledayid=?";
                      scheduledaybutton = conn.prepareStatement(queryscheduleday);
                      scheduledaybutton.setString(1, txtday.getText().toUpperCase());
                      scheduledaybutton.setString(2, updatedata);
                      scheduledaybutton.execute();
                      JOptionPane.showMessageDialog(this, "Schedule has been updated");
                      scheduleday();
                      txtday.setText(null);
                  }
              }
          }
           
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        scheduletime();
        scheduleday();
        txtday.setText(null);
        txttime.setText(null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tbltimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltimeMouseClicked
        try {
            int scheduletimerow = tbltime.getSelectedRow();
            
            String scheduletimerow1 = (tbltime.getModel().getValueAt(scheduletimerow, 0).toString());
            
            conn = mycon.con;
            String query = "select * from scheduledummytime where time='" + scheduletimerow1 + "'";
            pstmt = conn.prepareStatement(query);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                txttime.setText(rs.getString(2));
                updatedata = rs.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tbltimeMouseClicked

    private void tbltime1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltime1MouseClicked
        try {
            int scheduledayrow = tbltime1.getSelectedRow();
            
            String scheduledayrow1 = (tbltime1.getModel().getValueAt(scheduledayrow, 0).toString());
            
            conn = mycon.con;
            String query = "select * from scheduledummyday where day='" + scheduledayrow1 + "'";
            pstmt = conn.prepareStatement(query);
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                txtday.setText(rs.getString(2));
                updatedata = rs.getString(1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage());
        }
    }//GEN-LAST:event_tbltime1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
            txtday.setEnabled(false);
            tbltime1.setEnabled(false);
            txttime.setEnabled(true);
            tbltime.setEnabled(true);
            scheduletime();
           enablebuttonscheduletime = "enable";
           enablebuttonscheduleday = null;
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      
            txttime.setEnabled(false);
            tbltime1.setEnabled(false);
            txtday.setEnabled(true);
            tbltime1.setEnabled(true);
            scheduleday();
enablebuttonscheduletime = null;
       enablebuttonscheduleday = "enablescheduleday";
        
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tbltime;
    private javax.swing.JTable tbltime1;
    private javax.swing.JTextField txtday;
    private javax.swing.JTextField txttime;
    // End of variables declaration//GEN-END:variables
}
